-- MySQL Script generated by MySQL Workbench
-- Tue Mar  7 09:38:18 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema equipmentrentaldb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema equipmentrentaldb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `equipmentrentaldb` DEFAULT CHARACTER SET utf8 ;
USE `equipmentrentaldb` ;

-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`Places`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`Places` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`Places` (
  `place_id` INT NOT NULL AUTO_INCREMENT,
  `location` GEOMETRY NULL,
  `address` VARCHAR(300) NULL,
  PRIMARY KEY (`place_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`Owners`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`Owners` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`Owners` (
  `owner_id` VARCHAR(64) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `place_id` INT NULL,
  `counter_id` VARCHAR(64) NOT NULL,
  `group_type` INT NULL,
  `tel` VARCHAR(15) NULL,
  PRIMARY KEY (`owner_id`),
  INDEX `Owners.place_id_idx` (`place_id` ASC) VISIBLE,
  CONSTRAINT `Owners.place_id`
    FOREIGN KEY (`place_id`)
    REFERENCES `equipmentrentaldb`.`Places` (`place_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`EquipmentTypes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`EquipmentTypes` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`EquipmentTypes` (
  `type_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `comment` VARCHAR(512) NULL,
  PRIMARY KEY (`type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`Equipments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`Equipments` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`Equipments` (
  `equipment_id` INT NOT NULL AUTO_INCREMENT,
  `equipment_n` INT NOT NULL DEFAULT 1,
  `name` VARCHAR(100) NOT NULL,
  `owner_id` VARCHAR(64) NULL COMMENT 'このアイテムの登録状態の変更、削除が可能なLINEグループ',
  `picture_path` VARCHAR(256) NULL,
  `status` INT NOT NULL DEFAULT 0,
  `comment` VARCHAR(500) NULL COMMENT '備品の状態などを記載',
  `equipment_type` INT NOT NULL,
  PRIMARY KEY (`equipment_id`),
  INDEX `Owners.owner_id_idx` (`owner_id` ASC) VISIBLE,
  INDEX `EquipmentTypes.type_id_idx` (`equipment_type` ASC) VISIBLE,
  CONSTRAINT `Equipments.owner_id`
    FOREIGN KEY (`owner_id`)
    REFERENCES `equipmentrentaldb`.`Owners` (`owner_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Equipments.type_id`
    FOREIGN KEY (`equipment_type`)
    REFERENCES `equipmentrentaldb`.`EquipmentTypes` (`type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`Events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`Events` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`Events` (
  `event_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `owner_id` VARCHAR(64) NOT NULL,
  `time_from` DATETIME NOT NULL,
  `time_to` DATETIME NOT NULL,
  `comment` VARCHAR(512) NULL,
  `place_id` INT NULL,
  `event_type` INT NOT NULL DEFAULT 1 COMMENT '1: public event, 2: private use or team use',
  PRIMARY KEY (`event_id`),
  INDEX `Events.place_id_idx` (`place_id` ASC) VISIBLE,
  CONSTRAINT `Events.place_id`
    FOREIGN KEY (`place_id`)
    REFERENCES `equipmentrentaldb`.`Places` (`place_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`EquipmentReservations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`EquipmentReservations` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`EquipmentReservations` (
  `reservation_id` INT NOT NULL AUTO_INCREMENT,
  `equipment_id` INT NOT NULL,
  `event_id` INT NOT NULL,
  `renter_id` VARCHAR(64) NOT NULL,
  `equipment_n` INT NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `usage_date` DATETIME NOT NULL,
  `comment` VARCHAR(200) NULL,
  `status` INT NOT NULL DEFAULT 0 COMMENT '0 : 未利用、 1: 使用中,  2: 返却済',
  PRIMARY KEY (`reservation_id`),
  INDEX `EquipmentReservations.equipment_id_idx` (`equipment_id` ASC) VISIBLE,
  INDEX `Events.event_id_idx` (`event_id` ASC) VISIBLE,
  CONSTRAINT `EquipmentReservations.equipment_id`
    FOREIGN KEY (`equipment_id`)
    REFERENCES `equipmentrentaldb`.`Equipments` (`equipment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `EquipmentReservations.event_id`
    FOREIGN KEY (`event_id`)
    REFERENCES `equipmentrentaldb`.`Events` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`FacilityTypes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`FacilityTypes` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`FacilityTypes` (
  `type_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `comment` VARCHAR(512) NULL,
  PRIMARY KEY (`type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`Facilities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`Facilities` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`Facilities` (
  `facility_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(90) NULL,
  `owner_id` VARCHAR(64) NULL,
  `picture_path` VARCHAR(256) NULL,
  `status` INT NULL,
  `comment` VARCHAR(512) NULL,
  `place_id` INT NULL,
  `facility_type` INT NULL,
  PRIMARY KEY (`facility_id`),
  INDEX `Facilities.owner_id_idx` (`owner_id` ASC) VISIBLE,
  INDEX `FacilityTypes.facility_type_idx` (`facility_type` ASC) VISIBLE,
  INDEX `Facilities.place_id_idx` (`place_id` ASC) VISIBLE,
  CONSTRAINT `Facilities.owner_id`
    FOREIGN KEY (`owner_id`)
    REFERENCES `equipmentrentaldb`.`Owners` (`owner_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Facilities.facility_type`
    FOREIGN KEY (`facility_type`)
    REFERENCES `equipmentrentaldb`.`FacilityTypes` (`type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Facilities.place_id`
    FOREIGN KEY (`place_id`)
    REFERENCES `equipmentrentaldb`.`Places` (`place_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`FacilityReservations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`FacilityReservations` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`FacilityReservations` (
  `reservation_id` INT NOT NULL AUTO_INCREMENT,
  `facility_id` INT NOT NULL,
  `renter_id` VARCHAR(64) NOT NULL,
  `event_id` INT NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `comment` VARCHAR(200) NULL,
  PRIMARY KEY (`reservation_id`),
  INDEX `FacilityReservations.facility_id_idx` (`facility_id` ASC) VISIBLE,
  INDEX `Events.event_id_idx` (`event_id` ASC) VISIBLE,
  CONSTRAINT `FacilityReservations.facility_id`
    FOREIGN KEY (`facility_id`)
    REFERENCES `equipmentrentaldb`.`Facilities` (`facility_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FacilityReservations.event_id`
    FOREIGN KEY (`event_id`)
    REFERENCES `equipmentrentaldb`.`Events` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`SportEvents`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`SportEvents` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`SportEvents` (
  `sport_event_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `comment` VARCHAR(500) NULL,
  PRIMARY KEY (`sport_event_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`IncludeSportEvents`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`IncludeSportEvents` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`IncludeSportEvents` (
  `event_id` INT NOT NULL,
  `sport_event_id` INT NOT NULL,
  INDEX `Events.event_id_idx` (`event_id` ASC) VISIBLE,
  INDEX `SportEvents.sport_event_id_idx` (`sport_event_id` ASC) VISIBLE,
  CONSTRAINT `Include.event_id`
    FOREIGN KEY (`event_id`)
    REFERENCES `equipmentrentaldb`.`Events` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Include.sport_event_id`
    FOREIGN KEY (`sport_event_id`)
    REFERENCES `equipmentrentaldb`.`SportEvents` (`sport_event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipmentrentaldb`.`Participants`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipmentrentaldb`.`Participants` ;

CREATE TABLE IF NOT EXISTS `equipmentrentaldb`.`Participants` (
  `participant_id` VARCHAR(64) NOT NULL,
  `event_id` INT NOT NULL,
  `invitation_code` VARCHAR(64) NOT NULL,
  INDEX `Events.event_id_idx` (`event_id` ASC) VISIBLE,
  CONSTRAINT `Participanes.event_id`
    FOREIGN KEY (`event_id`)
    REFERENCES `equipmentrentaldb`.`Events` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
